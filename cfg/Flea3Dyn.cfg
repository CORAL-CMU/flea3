#!/usr/bin/env python2
PACKAGE = "flea3"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# fps/frame_rate provides control over the frame rate of the camera.
gen.add("fps", double_t, 0,
        "Frames per second",
        7.5, 1, 240)

# Video Mode controls setting of standard video mode or format 7 video mode
video_mode_enum = gen.enum([gen.const("rgb_640x480", int_t, 4, ""),
                            gen.const("y8_640x480", int_t, 5, ""),
                            gen.const("rgb_800x600", int_t, 8, ""),
                            gen.const("y8_800x600", int_t, 9, ""),
                            gen.const("rgb_1024x768", int_t, 12, ""),
                            gen.const("y8_1024x768", int_t, 13, ""),
                            gen.const("rgb_1280x960", int_t, 16, ""),
                            gen.const("y8_1280x960", int_t, 17, ""),
                            gen.const("rgb_1600x1200", int_t, 20, ""),
                            gen.const("y8_1600x1200", int_t, 21, ""),
                            gen.const("format7", int_t, 23, "")],
                           "An enum to set video mode")
gen.add("video_mode", int_t, 0,
        "Video mode for camera",
        23, 4, 23, edit_method=video_mode_enum)
gen.add("format7_mode", int_t, 0,
        "Camera modes for format 7",
        0, 0, 8)

# ROI controls region of intreset in format 7 mode. Assumes centered ROI
# Set to 0 to reset ROI
gen.add("width", int_t, 0,
        "ROI width",
        0, 0, 2048)
gen.add("height", int_t, 0,
        "ROI height",
        0, 0, 2048)

pixel_format_enum = gen.enum([gen.const("unspecified", int_t, 0, "unspecified"),
                              gen.const("mono8", int_t, 31, "mono8"),
                              gen.const("rgb8", int_t, 27, "rgb8"),
                              gen.const("mono16", int_t, 26, "mono16"),
                              gen.const("raw8", int_t, 22, "raw8"),
                              gen.const("raw16", int_t, 21, "raw16")],
                             "An enum to set pixel format")
gen.add("pixel_format", int_t, 0,
        "Pixel format for format 7",
        0, 0, 31, edit_method=pixel_format_enum)

gen.add("raw_bayer_output", bool_t, 0,
        "Enable raw bayer output in standard video mode Y8 and Y16",
        False)

# TODO: this is a temporary hack so that we can trigger the camera using software
gen.add("enable_trigger", bool_t, 0,
        "Enable external trigger or software trigger",
        False)

# Exposure
# 1. Off: Control of the exposure is achieved via setting both Exposure and
#         Gain. This mode is achieved by setting Auto Exposure to Off, or by
#         setting Exposure and Gain to Off.
# 2. Manual: The camera automatically modifies Exposure and Gain to try to match
#            the average image intensity to the Auto Exposure value. This mode
#            is achieved by setting Auto Exposure to Off and either/both of
#            Exposure and Gain to Continuous
# 3. Auto: The camera automatically modifies the value in order to produce an
#          image that is visually pleasing. This mode is achieved by setting
#          the all three of Auto Exposure, Exposure, and Gain to Continuous.
#          In this mode, the value reflects the average image intensity
gen.add("exposure", bool_t, 0,
        "Enable/disable exposure",
        True)
gen.add("auto_exposure", bool_t, 0,
        "Automatically change exposure (Gain, IRis & Shutter control)",
        True)
gen.add("exposure_value", double_t, 0,
        "Auto exposure value",
        1.35, -10.0, 10.0)

gen.add("auto_shutter", bool_t, 0,
        "Auomatically change shutter speed",
        True)
gen.add("shutter_ms", double_t, 0,
        "Amount of time (in seconds) for the apeture to remain open",
        0.03, 0.0, 1.0)

gen.add("auto_gain", bool_t, 0,
        "Automatically change gain",
        True)
gen.add("gain_db", double_t, 0,
        "Relative circuit gain",
        0.0, 0.0, 30.0)

# White Balance
# When white balance is off,
# it is effectively the same as setting both red and blue to 512
gen.add("white_balance", bool_t, 0,
        "Enable/disable white balance",
        False)
gen.add("auto_white_balance", bool_t, 0,
        "Automatically change white balance",
        True)
gen.add("wb_blue", int_t, 0,
        "White balance blue component",
        800, 0, 1023)
gen.add("wb_red", int_t, 0,
        "White balance red component",
        550, 0, 1023)

gen.add("brightness", double_t, 0,
        "Black level offset",
        0.0, 0.0, 10.0)

gen.add("gamma", double_t, 0,
        "Gamma expansion exponent",
        1.0, 0.5, 4.0)

exit(gen.generate(PACKAGE, "flea3", "Flea3Dyn"))
